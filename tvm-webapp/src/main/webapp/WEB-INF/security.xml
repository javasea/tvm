<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:sec="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <import resource="classpath:com/tianji/security/services.xml" />
  <bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
    <sec:filter-chain-map request-matcher="ant">
      <sec:filter-chain pattern="/**"
        filters="
            securityContextPersistenceFilter,
            logoutFilter,
            gatewayProcessingFilter,
            casAuthenticationFilter,
            exceptionTranslationFilter,
            gatewayExceptionTranslationFilter,
            filterSecurityInterceptor,
            userStatusFilter" />
    </sec:filter-chain-map>
  </bean>

  <bean id="securityContextPersistenceFilter"
    class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />

  <bean id="logoutFilter"
    class="org.springframework.security.web.authentication.logout.LogoutFilter">
    <constructor-arg index="0" value="http://www.tianji.com/blank" />
    <constructor-arg index="1">
      <list>
        <bean
          class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
      </list>
    </constructor-arg>
  </bean>

  <bean id="gatewayProcessingFilter" class="com.tianji.security.cas.GatewayProcessingFilter">
    <property name="filterProcessesUrl" value="/j_security_check" />
  </bean>

  <bean id="casAuthenticationFilter"
    class="org.springframework.security.cas.web.CasAuthenticationFilter"
    p:authenticationManager-ref="authenticationManager"
    p:filterProcessesUrl="/j_security_check" />

  <bean id="exceptionTranslationFilter"
    class="org.springframework.security.web.access.ExceptionTranslationFilter">
    <property name="authenticationEntryPoint">
      <bean
        class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="https://login.tianji.com/cas/login" />
        <property name="serviceProperties" ref="serviceProperties" />
      </bean>
    </property>
  </bean>

  <bean id="gatewayExceptionTranslationFilter"
    class="com.tianji.security.cas.GatewayExceptionTranslationFilter">
    <property name="authenticationEntryPoint">
      <bean class="com.tianji.security.cas.GatewayEntryPoint">
        <property name="loginUrl" value="https://login.tianji.com/cas/login" />
        <property name="serviceProperties" ref="serviceProperties" />
      </bean>
    </property>
  </bean>

  <bean id="filterSecurityInterceptor" class="com.tianji.security.cas.TianjiFilterSecurityInterceptor">
    <property name="authenticationManager" ref="authenticationManager" />
    <property name="accessDecisionManager">
      <bean class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false" />
        <property name="decisionVoters">
          <list>
            <bean class="org.springframework.security.access.vote.RoleVoter" />
          </list>
        </property>
      </bean>
    </property>
    <property name="securityMetadataSource">
      <sec:filter-security-metadata-source>
        <sec:intercept-url pattern="/parse/**" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/search/*" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/search/*/*" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/my/**" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/admin/uploaded/**" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/resume/**" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/view/**" access="ROLE_agent,ROLE_operation" />
        <sec:intercept-url pattern="/view/**/delete/**" access="ROLE_manager" />
        <sec:intercept-url pattern="/market/landing" access="ROLE_gateway" />
        <sec:intercept-url pattern="/search/export" access="ROLE_agent_admin" />
        <sec:intercept-url pattern="/brain/*" access="ROLE_agent_admin" />


        <sec:intercept-url pattern="/online/index" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/add" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/edit/**" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/del/**" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/**/item/add" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/**/item/edit/**" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/**/item/view/**" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/**/item/remove/**" access="ROLE_operation" />

        <sec:intercept-url pattern="/online/project/feedback" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/feedback/view/**/**" access="ROLE_operation" />
        <sec:intercept-url pattern="/online/project/feedback/details/**,**/**,**" access="ROLE_operation" />
      </sec:filter-security-metadata-source>
    </property>
  </bean>


  <bean id="authenticationManager"
    class="org.springframework.security.authentication.ProviderManager">
    <property name="providers">
      <list>
        <ref bean="casAuthenticationProvider" />
      </list>
    </property>
  </bean>

  <bean id="casAuthenticationProvider"
    class="org.springframework.security.cas.authentication.CasAuthenticationProvider"
    p:serviceProperties-ref="serviceProperties" p:userDetailsService-ref="userDetailsService"
    p:ticketValidator-ref="casTicketValidator" p:key="my_password_for_this" />

  <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
    <property name="service"
      value="http://job.tianji.com/resume/j_security_check" />
  </bean>

  <bean id="userDetailsService" class="com.tianji.security.UserDetailsServiceImpl"
    p:simpleUserDao-ref="simpleUserDao" p:loginUserService-ref="loginUserService" />

  <bean id="simpleUserDao" class="com.tianji.security.dao.jdbc.SimpleUserDaoImpl"
    p:dataSource-ref="userRoleDataSource" />

  <bean id="casTicketValidator"
    class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
    <constructor-arg index="0" value="https://login.tianji.com/cas" />
  </bean>

  <bean id="userRoleDataSource" class="com.jolbox.bonecp.BoneCPDataSource"
    destroy-method="close">
    <property name="driverClass" value="#{env['datasource.zhaoyun.jdbc.driverClassName']}" />
    <property name="jdbcUrl" value="#{env['datasource.zhaoyun.jdbc.url']}" />
    <property name="username" value="#{env['datasource.zhaoyun.jdbc.username']}" />
    <property name="password" value="#{env['datasource.zhaoyun.jdbc.password']}" />
    <property name="maxConnectionsPerPartition" value="10" />
    <property name="minConnectionsPerPartition" value="1" />
    <property name="partitionCount" value="3" />
    <property name="acquireIncrement" value="1" />
    <property name="releaseHelperThreads" value="3" />
  </bean>

  <bean id="userStatusFilter" class="com.tianji.security.filter.UserStatusFilter">
    <property name="loginHelper">
      <bean class="com.tianji.security.utils.LoginHelper" />
    </property>
    <property name="loginUserService" ref="loginUserService" />
  </bean>
</beans>

